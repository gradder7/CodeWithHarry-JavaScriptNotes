let a
let b = a[0];
let c = a[2];

let check = Array.from(document.getElementsByClassName("check"))

function checkall() {
  if (check[2].checked) {
    check[0].checked = true
    check[1].checked = true
  }
}

function hack() {
  let side = Array.from(document.getElementsByClassName("side1"));
  let clear1 = setInterval(() => {
    if (b == a[0]) {
      b = a[1]
    } else {
      b = a[0]
    }
    side[0].innerHTML = b
  }, 300)
  let clear2 = setInterval(() => {
    if (c == a[2]) {
      c = a[1]
    } else {
      c = a[2]
    }
    
    side[1].innerHTML = c
  }, 250)
  let text = Array.from(document.getElementsByClassName("text"))
  let target = document.getElementById("target").value
  // Async Await 
  const hackapi = async function() {
    // clear screen
    {
      for (let i = 1; i < text.length; i++) {
        text[i].innerHTML = " "
      }
    }
    // screen cleared

    let step1 = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[1].innerHTML = "Hijacking user..."
        resolve(1)
      }, 1000)
    })
    let step2 = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[2].innerHTML = "user located"
        resolve(1)
      }, 1000)
    })
    let step1a = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[2].innerHTML = `username:${target} ; `
        resolve(1)
      }, 1000)
    })
    let step1b = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[2].innerHTML += ` password:XXXXXXX ;`
        resolve(1)
      }, 500)
    })
    let step1c = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[2].innerHTML += ` number:+91XXXXXXXXXX`
        resolve(1)
      }, 800)
    })
    let step3 = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[3].innerHTML = "getting device info..."
        resolve(1)
      }, 1000)
    })
    if (check[0].checked) {
      let step5 = await new Promise((resolve, reject) => {
        setTimeout(() => {
          text[4].innerHTML = "facebook hacked"
          resolve(1)
        }, 1000)
      })
    }
    if (check[1].checked) {
      let step5 = await new Promise((resolve, reject) => {
        setTimeout(() => {
          text[4].innerHTML = "Instagram hacked"
          resolve(1)
        }, 1000)
      })
    }
    let step5 = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[4].innerHTML = "resetting passwords..."
        resolve(1)
      }, 1000)
    })
    let step6 = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[2].innerHTML = "access granted to phone"
        resolve(1)
      }, 1000)
    })
    let step7 = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[2].innerHTML = "logs generated"
        resolve(1)
      }, 1000)
    })
    let step8 = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[5].innerHTML = "hacking status: pending..."
        resolve(1)
      }, 1000)
    })
    let step9 = await new Promise((resolve, reject) => {
      setTimeout(() => {
        text[5].innerHTML = "hacking status: hacked! succesfully -_+"
        resolve(1)
        clearInterval(clear1)
        clearInterval(clear2)
        side.forEach((x) => {
          x.innerHTML = "Hacker Man"
        })
      }, 3000)
    })
  }
  hackapi()
}


